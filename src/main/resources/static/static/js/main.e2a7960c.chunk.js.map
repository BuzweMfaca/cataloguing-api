{"version":3,"sources":["actions/itemActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddItem.js","reducers/errorReducer.js","reducers/itemReducer.js","reducers/index.js","store.js","components/Project/UpdateItem.js","App.js","serviceWorker.js","index.js"],"names":["createItem","item","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","sent","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteItem","react_default","createElement","className","itemIdentifier","itemName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getItems","items","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","_x2","Header","data-toggle","data-target","AddItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newItem","classnames","is-invalid","placeholder","initialState","combineReducers","length","undefined","action","objectSpread","filter","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateItem","_nextProps$item","match","params","getItem","updateItem","disabled","_ref3","_callee3","_context3","_x3","App","es","BrowserRouter","Layout_Header","Redirect","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"gUAGaA,EAAa,SAACC,EAAMC,GAAP,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAmB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEvBC,IAAMC,KAAK,YAAaf,GAFD,OAAAW,EAAAK,KAGzCf,EAAQgB,KAAK,cACbR,EAAS,CACPS,KCRoB,aDSpBC,QAAS,KAN8BR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SASzCF,EAAS,CACPS,KCboB,aDcpBC,QAASR,EAAAS,GAAIC,SAASC,OAXiB,yBAAAX,EAAAY,SAAAf,EAAAgB,KAAA,YAAnB,gBAAAC,GAAA,OAAAvB,EAAAwB,MAAAF,KAAAG,YAAA,IEGpBC,6MACJC,cAAgB,SAAAC,GACdC,EAAKC,MAAMC,WAAWH,4EAGf,IACC9B,EAASwB,KAAKQ,MAAdhC,KACR,OACEkC,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,gCACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,SACbF,EAAA5B,EAAA6B,cAAA,QAAMC,UAAU,WAAWpC,EAAKqC,iBAElCH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,2BACbF,EAAA5B,EAAA6B,cAAA,UAAKnC,EAAKsC,UACVJ,EAAA5B,EAAA6B,cAAA,SAAInC,EAAKuC,cAEXL,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,8BACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,cACZF,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMC,GAAE,eAAAC,OAAiB1C,EAAKqC,iBAC5BH,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,0BACZF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,mBAAb,uBAGJF,EAAA5B,EAAA6B,cAAA,MACEC,UAAU,yBACVO,QAASnB,KAAKK,cAAce,KAAKpB,KAAMxB,EAAKqC,iBAE5CH,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,2BAAb,6BA7BQS,aA2CXC,cACb,KACA,CAAEb,WFZsB,SAAAH,GAAE,sBAAAiB,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAyC,EAAMvC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,WAE5BqC,OAAOC,QACL,0EAH0B,CAAAF,EAAApC,KAAA,eAAAoC,EAAApC,KAAA,EAMtBC,IAAMsC,OAAN,aAAAV,OAA0BZ,IANJ,OAO5BrB,EAAS,CACPS,KC5CqB,cD6CrBC,QAASW,IATiB,wBAAAmB,EAAA1B,SAAAyB,EAAAxB,SAAJ,gBAAA6B,GAAA,OAAAN,EAAArB,MAAAF,KAAAG,YAAA,KEUbmB,CAGblB,GCvCa0B,EAVa,WAC1B,OACEpB,EAAA5B,EAAA6B,cAACD,EAAA5B,EAAMiD,SAAP,KACErB,EAAA5B,EAAA6B,cAACK,EAAA,EAAD,CAAMC,GAAG,WAAWL,UAAU,uBAA9B,sBCCAoB,8LAEFhC,KAAKQ,MAAMyB,4CAGJ,IACCC,EAAUlC,KAAKQ,MAAMhC,KAArB0D,MAER,OACExB,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,SACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,SACAF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAACwB,EAAD,MAEAzB,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,WACCuB,EAAME,IAAI,SAAA5D,GAAI,OACbkC,EAAA5B,EAAA6B,cAAC0B,EAAD,CAAaC,IAAK9D,EAAK8B,GAAI9B,KAAMA,MAEnCkC,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,sBAvBUU,aAyCTC,cAJS,SAAAiB,GAAK,MAAK,CAChC/D,KAAM+D,EAAM/D,OAKZ,CAAEyD,SJ/BoB,iCAAAO,EAAA7D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAA0D,EAAMxD,GAAN,IAAAyD,EAAA,OAAA7D,EAAAC,EAAAI,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACVC,IAAMsD,IAAI,iBADA,OACtBF,EADsBC,EAAAnD,KAE5BP,EAAS,CACPS,KCrBqB,YDsBrBC,QAAS+C,EAAI5C,OAJa,wBAAA6C,EAAA5C,SAAA0C,EAAAzC,SAAN,gBAAA6C,GAAA,OAAAL,EAAAtC,MAAAF,KAAAG,YAAA,KI6BTmB,CAGbU,GC7Bac,mLAlBX,OACEpC,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,uDACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,gBAAb,sBACAF,EAAA5B,EAAA6B,cAAA,UACEC,UAAU,iBACVlB,KAAK,SACLqD,cAAY,WACZC,cAAY,eAEZtC,EAAA5B,EAAA6B,cAAA,QAAMC,UAAU,kCAZPS,8ECIf4B,cACJ,SAAAA,IAAc,IAAA1C,EAAA,OAAA5B,OAAAuE,EAAA,EAAAvE,CAAAqB,KAAAiD,IACZ1C,EAAA5B,OAAAwE,EAAA,EAAAxE,CAAAqB,KAAArB,OAAAyE,EAAA,EAAAzE,CAAAsE,GAAAI,KAAArD,QAEKuC,MAAQ,CACXzB,SAAU,GACVD,eAAgB,GAChBE,YAAa,GACbuC,OAAQ,IAGV/C,EAAKgD,SAAWhD,EAAKgD,SAASnC,KAAdzC,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAA4B,KAChBA,EAAKkD,SAAWlD,EAAKkD,SAASrC,KAAdzC,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAA4B,KAXJA,yFAeYmD,GACpBA,EAAUJ,QACZtD,KAAK2D,SAAS,CAAEL,OAAQI,EAAUJ,0CAI7BM,GACP5D,KAAK2D,SAALhF,OAAAkF,EAAA,EAAAlF,CAAA,GAAiBiF,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,yCAGnCJ,GACPA,EAAEK,iBACF,IAAMC,EAAU,CACdpD,SAAUd,KAAKuC,MAAMzB,SACrBD,eAAgBb,KAAKuC,MAAM1B,eAC3BE,YAAaf,KAAKuC,MAAMxB,aAE1Bf,KAAKQ,MAAMjC,WAAW2F,EAASlE,KAAKQ,MAAM/B,0CAGnC,IACC6E,EAAWtD,KAAKuC,MAAhBe,OACR,OACE5C,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,SACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,QAAM8C,SAAUzD,KAAKyD,UACnB/C,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWuD,IAAW,+BAAgC,CACpDC,aAAcd,EAAOxC,WAEvBuD,YAAY,YACZN,KAAK,WACLC,MAAOhE,KAAKuC,MAAMzB,SAClByC,SAAUvD,KAAKuD,WAEhBD,EAAOxC,UACNJ,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB0C,EAAOxC,WAG9CJ,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWuD,IAAW,+BAAgC,CACpDC,aAAcd,EAAOzC,iBAEvBwD,YAAY,iBACZN,KAAK,iBACLC,MAAOhE,KAAKuC,MAAM1B,eAClB0C,SAAUvD,KAAKuD,WAEhBD,EAAOzC,gBACNH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBACZ0C,EAAOzC,iBAIdH,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,YACEC,UAAWuD,IAAW,+BAAgC,CACpDC,aAAcd,EAAOvC,cAEvBsD,YAAY,mBACZN,KAAK,cACLC,MAAOhE,KAAKuC,MAAMxB,YAClBwC,SAAUvD,KAAKuD,WAEhBD,EAAOvC,aACNL,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBACZ0C,EAAOvC,cAKdL,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,SACLkB,UAAU,gDAlGRS,aAuHPC,cAJS,SAAAiB,GAAK,MAAK,CAChCe,OAAQf,EAAMe,SAKd,CAAE/E,cAFW+C,CAGb2B,mBC9HIqB,EAAe,WCAfA,EAAe,CACnBpC,MAAO,GACP1D,KAAM,ICAO+F,cAAgB,CAC7BjB,OFDa,WAAuC,IAA9Bf,EAA8BpC,UAAAqE,OAAA,QAAAC,IAAAtE,UAAA,GAAAA,UAAA,GAAtBmE,EAAcI,EAAQvE,UAAAqE,OAAA,EAAArE,UAAA,QAAAsE,EACpD,OAAQC,EAAOhF,MACb,INNsB,aMOpB,OAAOgF,EAAO/E,QAEhB,QACE,OAAO4C,IEJX/D,KDCa,WAAuC,IAA9B+D,EAA8BpC,UAAAqE,OAAA,QAAAC,IAAAtE,UAAA,GAAAA,UAAA,GAAtBmE,EAAcI,EAAQvE,UAAAqE,OAAA,EAAArE,UAAA,QAAAsE,EACpD,OAAQC,EAAOhF,MACb,IPRqB,YOSnB,OAAOf,OAAAgG,EAAA,EAAAhG,CAAA,GACF4D,EADL,CAEEL,MAAOwC,EAAO/E,UAElB,IPZoB,WOalB,OAAOhB,OAAAgG,EAAA,EAAAhG,CAAA,GACF4D,EADL,CAEE/D,KAAMkG,EAAO/E,UAEjB,IPhBuB,cOiBrB,OAAOhB,OAAAgG,EAAA,EAAAhG,CAAA,GACF4D,EADL,CAEEL,MAAOK,EAAML,MAAM0C,OACjB,SAAApG,GAAI,OAAIA,EAAKqC,iBAAmB6D,EAAO/E,YAG7C,QACE,OAAO4C,MEvBPsC,EAAc,GACdC,EAAa,CAACC,KAsBLC,EAlBXtD,OAAOuD,UAAUC,UAAUC,SAAS,UAC9BC,YACNC,EACAR,EACAS,YACEC,IAAerF,WAAf,EAAmB4E,GACnBpD,OAAO8D,8BACL9D,OAAO8D,iCAILJ,YACNC,EACAR,EACAS,YAAQC,IAAerF,WAAf,EAAmB4E,KCjBzBW,cAEJ,SAAAA,IAAc,IAAAlF,EAAA,OAAA5B,OAAAuE,EAAA,EAAAvE,CAAAqB,KAAAyF,IACZlF,EAAA5B,OAAAwE,EAAA,EAAAxE,CAAAqB,KAAArB,OAAAyE,EAAA,EAAAzE,CAAA8G,GAAApC,KAAArD,QAEKuC,MAAQ,CACXjC,GAAI,GACJQ,SAAU,GACVD,eAAgB,GAChBE,YAAa,GACbuC,OAAQ,IAEV/C,EAAKgD,SAAWhD,EAAKgD,SAASnC,KAAdzC,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAA4B,KAChBA,EAAKkD,SAAWlD,EAAKkD,SAASrC,KAAdzC,OAAA6E,EAAA,EAAA7E,QAAA6E,EAAA,EAAA7E,CAAA4B,KAXJA,yFAcYmD,GACpBA,EAAUJ,QACZtD,KAAK2D,SAAS,CAAEL,OAAQI,EAAUJ,SAFD,IAAAoC,EAKmBhC,EAAUlF,KAAxD8B,EAL2BoF,EAK3BpF,GAAIQ,EALuB4E,EAKvB5E,SAAUD,EALa6E,EAKb7E,eAAgBE,EALH2E,EAKG3E,YAEtCf,KAAK2D,SAAS,CACZrD,KACAQ,WACAD,iBACAE,4DAIgB,IACVT,EAAON,KAAKQ,MAAMmF,MAAMC,OAAxBtF,GACRN,KAAKQ,MAAMqF,QAAQvF,EAAIN,KAAKQ,MAAM/B,0CAG3BmF,GACP5D,KAAK2D,SAALhF,OAAAkF,EAAA,EAAAlF,CAAA,GAAiBiF,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,yCAGnCJ,GACPA,EAAEK,iBAEF,IAAM6B,EAAa,CACjBxF,GAAIN,KAAKuC,MAAMjC,GACfQ,SAAUd,KAAKuC,MAAMzB,SACrBD,eAAgBb,KAAKuC,MAAM1B,eAC3BE,YAAaf,KAAKuC,MAAMxB,aAG1Bf,KAAKQ,MAAMjC,WAAWuH,EAAY9F,KAAKQ,MAAM/B,0CAGtC,IACC6E,EAAWtD,KAAKuC,MAAhBe,OACR,OACE5C,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,QACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,aACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,mBACbF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,yBAAd,oBACAF,EAAA5B,EAAA6B,cAAA,WACAD,EAAA5B,EAAA6B,cAAA,QAAM8C,SAAUzD,KAAKyD,UACnB/C,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAWuD,IAAW,+BAAgC,CACpDC,aAAcd,EAAOxC,WAEvBuD,YAAY,YACZN,KAAK,WACLC,MAAOhE,KAAKuC,MAAMzB,SAClByC,SAAUvD,KAAKuD,WAEhBD,EAAOxC,UACNJ,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB0C,EAAOxC,WAG9CJ,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,OACLkB,UAAU,+BACVyD,YAAY,iBACZN,KAAK,iBACLC,MAAOhE,KAAKuC,MAAM1B,eAClB0C,SAAUvD,KAAKuD,SACfwC,UAAQ,KAGZrF,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,cACbF,EAAA5B,EAAA6B,cAAA,YACEC,UAAWuD,IAAW,+BAAgC,CACpDC,aAAcd,EAAOvC,cAEvBsD,YAAY,mBACZN,KAAK,cACLR,SAAUvD,KAAKuD,SACfS,MAAOhE,KAAKuC,MAAMxB,cAEnBuC,EAAOvC,aACNL,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,oBAAoB0C,EAAOvC,cAI9CL,EAAA5B,EAAA6B,cAAA,SACEjB,KAAK,SACLkB,UAAU,+CA1GHS,aA+HVC,cAJS,SAAAiB,GAAK,MAAK,CAChC/D,KAAM+D,EAAM/D,KAAKA,KACjB8E,OAAQf,EAAMe,SAId,CAAEuC,QX5GmB,SAACvF,EAAI7B,GAAL,sBAAAuH,EAAArH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAiB,SAAAkH,EAAMhH,GAAN,IAAAyD,EAAA,OAAA7D,EAAAC,EAAAI,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAAA6G,EAAA9G,KAAA,EAAA8G,EAAA7G,KAAA,EAElBC,IAAMsD,IAAN,aAAA1B,OAAuBZ,IAFL,OAE9BoC,EAF8BwD,EAAA1G,KAGpCP,EAAS,CACPS,KC7BkB,WD8BlBC,QAAS+C,EAAI5C,OALqBoG,EAAA7G,KAAA,gBAAA6G,EAAA9G,KAAA,EAAA8G,EAAAtG,GAAAsG,EAAA,SAQpCzH,EAAQgB,KAAK,cARuB,yBAAAyG,EAAAnG,SAAAkG,EAAAjG,KAAA,YAAjB,gBAAAmG,GAAA,OAAAH,EAAA9F,MAAAF,KAAAG,YAAA,IW4GV5B,cAFE+C,CAGbmE,GC3GaW,mLAhBX,OACE1F,EAAA5B,EAAA6B,cAAC0F,EAAA,EAAD,CAAUrB,MAAOA,GACftE,EAAA5B,EAAA6B,cAAC2F,EAAA,EAAD,KACE5F,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,OACbF,EAAA5B,EAAA6B,cAAC4F,EAAD,MACA7F,EAAA5B,EAAA6B,cAAC6F,EAAA,EAAD,CAAUvF,GAAG,eACbP,EAAA5B,EAAA6B,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAW5E,IAC1CtB,EAAA5B,EAAA6B,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW3D,IACxCvC,EAAA5B,EAAA6B,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWnB,cAVzCpE,aCCEwF,QACW,cAA7BnF,OAAOoF,SAASC,UAEe,UAA7BrF,OAAOoF,SAASC,UAEhBrF,OAAOoF,SAASC,SAASpB,MACvB,2DCZNqB,IAASC,OAAOvG,EAAA5B,EAAA6B,cAACuG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBnC,WACrBA,UAAUoC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e2a7960c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_ITEMS, GET_ITEM, DELETE_ITEM } from \"./types\";\n\nexport const createItem = (item, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/item\", item);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getItems = () => async dispatch => {\n  const res = await axios.get(\"/api/item/all\");\n  dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  });\n};\n\nexport const getItem = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/item/${id}`);\n    dispatch({\n      type: GET_ITEM,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteItem = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the item and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/item/${id}`);\n    dispatch({\n      type: DELETE_ITEM,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_ITEMS = \"GET_ITEMS\";\nexport const GET_ITEM = \"GET_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteItem } from \"../../actions/itemActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n  };\n\n  render() {\n    const { item } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{item.itemIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{item.itemName}</h3>\n              <p>{item.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/updateItem/${item.itemIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Item Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(this, item.itemIdentifier)}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Item</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteItem: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteItem }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addItem\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getItems } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const { items } = this.props.item;\n\n    return (\n      <div className=\"items\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Items</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {items.map(item => (\n                <ProjectItem key={item.id} item={item} />\n              ))}\n              <br />\n              <hr />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  item: PropTypes.object.isRequired,\n  getItems: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(\n  mapStateToProps,\n  { getItems }\n)(Dashboard);\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\">Cataloguing System</a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createItem } from \"../../actions/itemActions\";\nimport classnames from \"classnames\";\n\nclass AddItem extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      itemName: \"\",\n      itemIdentifier: \"\",\n      description: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newItem = {\n      itemName: this.state.itemName,\n      itemIdentifier: this.state.itemIdentifier,\n      description: this.state.description\n    };\n    this.props.createItem(newItem, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"items\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.itemName\n                      })}\n                      placeholder=\"Item Name\"\n                      name=\"itemName\"\n                      value={this.state.itemName}\n                      onChange={this.onChange}\n                    />\n                    {errors.itemName && (\n                      <div className=\"invalid-feedback\">{errors.itemName}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.itemIdentifier\n                      })}\n                      placeholder=\"Unique Item ID\"\n                      name=\"itemIdentifier\"\n                      value={this.state.itemIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.itemIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.itemIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Item Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddItem.propTypes = {\n  createItem: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createItem }\n)(AddItem);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_ITEMS, GET_ITEM, DELETE_ITEM } from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  item: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload\n      };\n    case GET_ITEM:\n      return {\n        ...state,\n        item: action.payload\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(\n          item => item.itemIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport itemReducer from \"./itemReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  item: itemReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getItem, createItem } from \"../../actions/itemActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateItem extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      itemName: \"\",\n      itemIdentifier: \"\",\n      description: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const { id, itemName, itemIdentifier, description } = nextProps.item;\n\n    this.setState({\n      id,\n      itemName,\n      itemIdentifier,\n      description\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getItem(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateItem = {\n      id: this.state.id,\n      itemName: this.state.itemName,\n      itemIdentifier: this.state.itemIdentifier,\n      description: this.state.description\n    };\n\n    this.props.createItem(updateItem, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"item\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Item form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.itemName\n                    })}\n                    placeholder=\"Item Name\"\n                    name=\"itemName\"\n                    value={this.state.itemName}\n                    onChange={this.onChange}\n                  />\n                  {errors.itemName && (\n                    <div className=\"invalid-feedback\">{errors.itemName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Item ID\"\n                    name=\"itemIdentifier\"\n                    value={this.state.itemIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Item Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateItem.propTypes = {\n  getItem: PropTypes.func.isRequired,\n  createItem: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  item: state.item.item,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { getItem, createItem }\n)(UpdateItem);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport AddItem from \"./components/Project/AddItem\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateItem from \"./components/Project/UpdateItem\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Redirect to=\"/dashboard\" />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/addItem\" component={AddItem} />\n            <Route exact path=\"/updateItem/:id\" component={UpdateItem} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}